% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/findOverlaps-methods.r
\docType{methods}
\name{findOverlaps,GWAS,FeatureList-method}
\alias{findOverlaps,GWAS,FeatureList-method}
\title{Find features overlapping GWAS markers}
\usage{
\S4method{findOverlaps}{GWAS,FeatureList}(query, subject, maxgap = 0L,
  minoverlap = 1L, type = c("any", "start", "end", "within"),
  select = c("all", "first", "last", "arbitrary"), ignore.strand = FALSE)
}
\arguments{
\item{query}{\code{GWAS} object}

\item{subject}{\code{FeatureList} object}

\item{maxgap}{
    Intervals with a separation of \code{maxgap} or less and a minimum
    of \code{minoverlap} overlapping positions, allowing for
    \code{maxgap}, are considered to be overlapping.  \code{maxgap}
    should be a scalar, non-negative, integer. \code{minoverlap}
    should be a scalar, positive integer.
  }

\item{minoverlap}{see documentation for \code{maxgap} argument}

\item{type}{
    By default, any overlap is accepted. By specifying the \code{type}
    parameter, one can select for specific types of overlap. The types
    correspond to operations in Allen's Interval Algebra (see
    references). If \code{type} is \code{start} or \code{end}, the
    intervals are required to have matching starts or ends,
    respectively. While this operation seems trivial, the naive
    implementation using \code{outer} would be much less
    efficient. Specifying \code{equal} as the type returns the
    intersection of the \code{start} and \code{end} matches. If
    \code{type} is \code{within}, the query interval must be wholly
    contained within the subject interval. Note that all matches must
    additionally satisfy the \code{minoverlap} constraint described above.

    The \code{maxgap} parameter has special meaning with the special
    overlap types. For \code{start}, \code{end}, and \code{equal},
    it specifies the maximum difference in the starts, ends or both,
    respectively. For \code{within}, it is the maximum amount by which
    the query may be wider than the subject.
  }

\item{select}{
    When \code{select} is \code{"all"} (the default), the results are
    returned as a \link{Hits} object. When \code{select} is \code{"first"},
    \code{"last"}, or \code{"arbitrary"} the results are returned as an
    integer vector of length \code{query} containing the first, last,
    or arbitrary overlapping interval in \code{subject}, with \code{NA}
    indicating intervals that did not overlap any intervals in \code{subject}.
 
    If \code{select} is \code{"all"}, a \link{Hits} object is returned.
    For all other \code{select} the return value depends on the \code{drop}
    argument. When \code{select != "all" && !drop}, an \link{IntegerList}
    is returned, where each element of the result corresponds to a space in
    \code{query}. When\code{select != "all" && drop}, an integer vector is
    returned containing indices that are offset to align with the unlisted
    \code{query}.
  }
}
\value{
\code{findOverlaps} returns either a \code{\link[IRanges]{HitsList-class}}
object when \code{select="all"} (the default), or a
\code{\link[IRanges]{CompressedIntegerList}} when \code{select} is not
\code{"all"}.
}
\description{
Determine which GWAS markers overlap each \code{FeatureList} feature.
}

